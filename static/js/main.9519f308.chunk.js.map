{"version":3,"sources":["components/Filter/Filter.js","img/chevron.svg","components/MoreBtn/MoreBtn.js","components/Loader/Loader.js","components/ApartmentsList/ApartmentsList.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","props","className","htmlFor","onChange","type","id","symbol","add","MoreBtn","width","height","viewBox","chevronIcon","xlinkHref","Loader","getImage","title","split","join","getApartItem","item","cls","push","href","src","srcSet","alt","address","price","ApartmentsList","state","apartments","loaded","inView","a","axios","get","response","data","slice","this","setState","alert","evt","filterValue","target","value","toLowerCase","trim","filter","apartment","includes","apartList","map","index","loader","rendered","onFiltered","bind","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9519f308.chunk.js","sourcesContent":["import React from 'react';\nimport './Filter.css';\n\nconst Filter = props => {\n    return (\n        <div className=\"filter\">\n            <label className=\"filter__label\" htmlFor=\"filterInput\">Filter</label>\n            <input onChange={props.onChange} className=\"filter__input\" type=\"text\" id=\"filterInput\" />\n        </div>\n    );\n};\n\nexport default Filter;","import SpriteSymbol from \"../../node_modules/svg-baker-runtime/browser-symbol.js\";\nimport sprite from \"../../node_modules/svg-sprite-loader/runtime/browser-sprite.build.js\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"chevron\",\n  \"use\": \"chevron-usage\",\n  \"viewBox\": \"0 0 7 17\",\n  \"content\": \"<symbol viewBox=\\\"0 0 7 17\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"chevron\\\">\\n<path id=\\\"chevron_Chevron\\\" d=\\\"M1 1L5.043 8.41667L1 15.8333\\\" stroke=\\\"#363636\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" />\\n</symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol","import React from 'react';\nimport './MoreBtn.css';\nimport chevronIcon from '../../img/chevron.svg'\n\nconst MoreBtn = props => {\n    return (\n        <button className=\"more-btn\" type=\"button\">\n            See more\n            <svg width=\"7\" height=\"17\" viewBox={chevronIcon.viewBox}>\n                <use xlinkHref={`#${chevronIcon.id}`} />\n            </svg>\n        </button>\n    );\n};\n\nexport default MoreBtn;","import React from 'react';\nimport './Loader.css';\n\nconst Loader = props => {\n\t\treturn(\n\t\t\t<div className='lds-roller'>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t);\n};\n\nexport default Loader;\n","import React from 'react';\nimport './ApartmentsList.css'\nimport Filter from '../Filter/Filter';\nimport MoreBtn from '../MoreBtn/MoreBtn';\nimport Loader from '../Loader/Loader';\nimport axios from 'axios';\n\nconst URL_FETCH = 'https://603e38c548171b0017b2ecf7.mockapi.io/homes';\nconst NUM_FILTERED_CHARS = 3;\n\nfunction getImage(type, width, height, title) {\n    const size = width + 'x' + height;\n    return 'https://via.placeholder.com/' + size + '.' + type + '?text=' + title.split(' ').join('');\n}\n\nfunction getApartItem(item) {\n    const cls = ['apart-list__link'];\n\n    if (item.type === 'IndependentLiving') {\n        cls.push('apart-list__link--indepedent');\n    }\n\n    if (item.type === 'SupportAvailable') {\n        cls.push('apart-list__link--support');\n    }\n\n    return (\n        <a className={cls.join(' ')}\n            href={`/details/${item.id}`}>\n            <figure className=\"apart-list__media\">\n                <picture>\n                    <source type=\"image/webp\" src={getImage('webp', 377, 227, item.title)} srcSet={getImage('webp', 377 * 2, 227 * 2, item.title) + ' 2x'} />\n                    <img width=\"377\" height=\"227\" src={getImage('jpeg', 377, 227, item.title)} srcSet={getImage('jpeg', 377 * 2, 227 * 2, item.title) + ' 2x'} alt=\"Apart view\" />\n                </picture>\n                <figcaption className=\"apart-list__media-caption\">\n                    {item.type}\n                </figcaption>\n            </figure>\n            <div className=\"apart-list__desc\">\n                <p className=\"apart-list__desc-title\">{item.title}</p>\n                <p className=\"apart-list__desc-address\">{item.address}</p>\n                <p className=\"apart-list__desc-price\">{'New Properties for Sale from Â£' + item.price}</p>\n                <p className=\"apart-list__desc-feature\">Shared Ownership Available</p>\n            </div>\n        </a>\n    );\n}\n\nclass ApartmentsList extends React.Component {\n    state = {\n        apartments: [],\n        loaded: false,\n        inView: []\n    };\n\n    async componentDidMount() {\n        try {\n            const response = await axios.get(URL_FETCH);\n            const apartments = response.data;\n            const inView = apartments.slice(0, 6);\n            const loaded = true;\n            this.setState({\n                apartments,\n                loaded,\n                inView\n            })\n        } catch (e) {\n            alert(e);\n        }\n    }\n\n    onFiltered(evt) {\n        const input = evt.target;\n        const filterValue = input.value.toLowerCase();\n        const state = this.state;\n\n        if (filterValue.trim() === '') {\n            state.inView = state.apartments.slice(0, 6);\n            this.setState({\n                state\n            })\n            return;\n        }\n\n        if (filterValue.trim() < NUM_FILTERED_CHARS) return;\n\n        state.inView = state.apartments.filter(apartment => apartment.title.toLowerCase().includes(filterValue));\n        this.setState({\n            state\n        })\n    }\n\n    render() {\n        const apartList = (\n            <>\n                <ul className=\"apart-list\">\n                    {this.state.inView.map((item, index) => {\n                        return (\n                            <li className=\"apart-list__item\"\n                                key={index}>\n                                {getApartItem(item)}\n                            </li>\n                        )\n                    })}\n                </ul>\n                <MoreBtn />\n            </>\n        );\n\n        const loader = <Loader />;\n\n        const rendered = this.state.loaded ? apartList : loader;\n\n        return (\n            <main>\n                <Filter onChange={this.onFiltered.bind(this)} />\n                {rendered}\n            </main>\n        );\n    };\n};\n\nexport default ApartmentsList;","import './App.css';\n\nimport ApartmentsList from './components/ApartmentsList/ApartmentsList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Our Latest Developments</h1>\n      <ApartmentsList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}